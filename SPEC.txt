===== Overview =====
- 16-bit
- 12 instructions
	- RISC architecture
- 7 registers
- 131 KB of RAM
- 131 KB of Program Memory (PROM)
- 128x128 px screen

====== Instruction Set =====
nop                       : No operation
mov <reg> <imm16/reg>     : Move a value into a register
stw <imm16> <imm16/reg>   : Store a value in memory
ldw <reg> <imm16/reg>     : Load a value from memory
psh <imm16/reg>           : Push a value onto the stack
pop <reg>                 : Pop a value off of the stack
add <reg> <imm16/reg>     : Add two values together
and <reg> <imm16/reg>     : Bitwise AND two values together
or <reg> <imm16/reg>      : Bitwise OR two values together
not <reg>                 : Bitwise NOT a value
jz <label>                : Jump to a label if the Zero flag is high
jc <label>                : Jump to a label if the Carry flag is high
hlt                       : Halt the CPU

===== Instruction Layout =====
Layout: AAAABCCC
A -> Opcode
B -> 0 for version one of the instruction, 1 for version two
C -> Padding Bits

NOTES:
- The first byte of an instruction is unused because immediates are placed in the bytes following the instruction.
- Not all instructions utilize the B arguments.

===== Registers =====
- 4 16-bit General Purpose Registers
	- a, b, c, d
- 2 8-bit System Registers
	- Flags (f)
	- Stack Pointer (sp)
- 16-Bit Program Counter

===== Memory Layout =====
0x0000...0x3fff -> VRAM (Video Memory)
0x4000...0x40ff -> Stack
0x4100...0xffff -> General Use

===== Flags =====
1. Zero
2. Carry
